@extends('layouts.app')

@section('content')
<div id="progress-bar"
     class="absolute z-99 top-0 left-0 h-2.5 bg-purple-600 transition-all duration-300"
     style="width: 0%;">
</div>
<main class="h-full px-6 py-25">
  <div class="container mx-auto">
    {{-- Judul --}}
    <h2 class="text-3xl font-bold text-center text-gray-800 dark:text-gray-100 mb-10">
      Kuesioner SDQ â€“ Responden
    </h2>
    <br>
    {{-- Notifikasi --}}
    @if(session('success'))
      <div class="p-4 mb-6 text-sm text-green-700 bg-green-100 rounded-lg text-center">
        {{ session('success') }}
      </div>
    @endif

    {{-- Form --}}
    <div class="mb-6 p-6 bg-white dark:bg-gray-800 rounded-lg shadow text-gray-800 dark:text-gray-100">
      <h2 class="text-xl font-semibold mb-2">Selamat datang!</h2>
      <p class="text-sm leading-relaxed">
        Terima kasih telah bersedia mengisi kuisioner ini. Jawaban Anda sangat berarti bagi kami dalam meningkatkan kualitas layanan dan pengambilan keputusan. 
        Mohon isi setiap pertanyaan dengan jujur dan sesuai dengan pengalaman Anda. Kuisioner ini bersifat anonim dan hanya memerlukan waktu beberapa menit saja.
      </p>
    </div>
    {{-- Form Kuesioner --}}
    <form id="form-quiz" method="POST">
      @csrf

      <div class="grid grid-cols-1 gap-6">
        @foreach($questions as $index => $q)
        <div class="question p-6 rounded-lg shadow-sm bg-white opacity-100 transition-opacity duration-300">
          <div class="flex items-start mb-4">
            <div class="flex-shrink-0 w-8 h-8 rounded-full bg-purple-600 text-white flex items-center justify-center font-bold text-sm">
              {{ $index + 1 }}
            </div>
            <p class="ml-4 text-gray-800 dark:text-gray-100 font-medium">
              {{ $q->pertanyaan }}
            </p>
          </div>

          <div class="space-y-2 md:space-y-0 md:space-x-4 md:flex">
            @foreach ($options as $option)
              @if ($option->question_id == $q->id)
              <label class="inline-flex items-center">
                <input type="radio" name="answers{{ $q->id }}" value="{{ $option->id }}" required
                  class="form-radio text-purple-600 focus:ring-purple-500">
                <span class="ml-2 text-sm text-gray-700 dark:text-gray-300">{{ $option->text }}</span>
              </label>
              @endif
            @endforeach
          </div>
        </div>
        @endforeach
      </div>
      <br>
      
      {{-- Submit Button --}}
      <div class="mt-20 text-center">
        <button type="submit"
          class="px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white text-sm font-medium rounded-lg shadow focus:outline-none focus:ring-2 focus:ring-purple-400">
          Kirim Jawaban
        </button>

        <!-- Tambahan: Credit dan Logo -->
        <div class="mt-6 flex flex-col items-center justify-center space-y-2">
          <p class="text-sm text-gray-500 dark:text-gray-400">Generated by <span class="font-semibold text-gray-700 dark:text-gray-200">Dimensi Peka</span></p>
          <img src="/path/to/logo.png" alt="Dimensi Paka Logo" class="h-10 w-auto">
        </div>
      </div>
    </form>

  </div>
</main>

<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
<script>
  $(document).ready(function () {
    const questions = document.querySelectorAll(".question"); // Pastikan ada class="question" di elemen
    const form = document.getElementById('form-quiz'); // ID disesuaikan dengan form Anda
    const progress = document.getElementById('progress-bar'); // Pastikan ada element dengan ID ini

    const observerOptions = {
      root: null,
      rootMargin: "-50% 0px -50% 0px",
      threshold: 0,
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("opacity-100");
          entry.target.classList.remove("opacity-30");
        } else {
          entry.target.classList.add("opacity-30");
          entry.target.classList.remove("opacity-100");
        }
      });
    }, observerOptions);

    function isElementInViewport(el) {
      const rect = el.getBoundingClientRect();
      const elHeight = rect.height;
      const wHeight = window.innerHeight;

      return (
        rect.top >= wHeight / 2 - elHeight &&
        rect.bottom <= wHeight / 2 + elHeight
      );
    }

    let datas = [[], { "tQuestion": {{ count($questions) }} }];

    questions.forEach((question, index) => {
      observer.observe(question);
      const inputs = question.querySelectorAll('input');

      inputs.forEach(input => {
        input.addEventListener('change', () => {
          if (!isElementInViewport(question)) scrollToView(question);
          else scrollToNextQuestion(index);

          datas[0][index] = {
            questionId: input.name,
            selectedOption: input.value,
            id: input.dataset.id || null
          };

          updateProgress(datas);
        });
      });
    });

    function scrollToNextQuestion(currentIndex) {
      if (currentIndex < questions.length - 1) {
        const nextQuestion = questions[currentIndex + 1];
        nextQuestion.classList.remove('opacity-20');
        nextQuestion.classList.add('opacity-100');
        nextQuestion.scrollIntoView({ behavior: 'smooth', block: 'center' });
      }
    }

    function scrollToView(element) {
      setTimeout(() => {
        element.scrollIntoView({ behavior: 'smooth', block: 'center' });
      }, 300);
    }

    function updateProgress(datas) {
      const totalQuestion = parseInt(datas[1].tQuestion);
      const answeredQuestion = datas[0].filter(el => el !== undefined).length;
      const progressPercentage = (answeredQuestion / totalQuestion) * 100;
      if (progress) {
        progress.style.width = `${progressPercentage}%`;
      }
    }

    // OPTIONAL: Jika ingin menampilkan pertanyaan terakhir saat mendekati akhir scroll
    window.addEventListener('scroll', () => {
      const beforeLast = questions[questions.length - 2];
      const lastQuestion = questions[questions.length - 1];

      const lastQuestionVisible = lastQuestion.getBoundingClientRect().top < window.innerHeight;

      if (lastQuestionVisible) {
        beforeLast.classList.add('opacity-20');
        beforeLast.classList.remove('opacity-100');

        lastQuestion.classList.remove('opacity-20');
        lastQuestion.classList.add('opacity-100');
      } else {
        lastQuestion.classList.add('opacity-20');
        lastQuestion.classList.remove('opacity-100');
      }
    });
  });
</script>
<script>
  $(document).ready(function() {
    $('#form-quiz').submit(function(event) {
      event.preventDefault();
      var formData = new FormData(this);
      var url = "{{ route('kuesioner.store') }}";

      Swal.fire({
        title: "Kirim Kuisioner?",
        text: "Haraop periksa kembali sebelum mengirim!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, Kirim!"
      }).then((result) => {
        if (result.isConfirmed) kirim(url, formData);
      });
    });
  });

  function kirim(url, data)
  {
    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        processData: false,
        contentType: false,
        success: function(data) {
          Swal.fire({
            title: "Berhasil!",
            text: data.message,
            icon: "success"
          });
          window.location.href = data.redirect;
        },
        error: function(xhr, status, error) {
          console.log(xhr.responseText);
        }
      });
  }
</script>
@endsection
